// Code generated by protoc-gen-go from "Mumble.proto"
// DO NOT EDIT!

package mumbleproto

import proto "goprotobuf.googlecode.com/hg/proto"
import "os"

// Reference proto & os imports to suppress error if it's not otherwise used.
var _ = proto.GetString
var _ os.Error

type Reject_RejectType int32
const (
	Reject_None = 0
	Reject_WrongVersion = 1
	Reject_InvalidUsername = 2
	Reject_WrongUserPW = 3
	Reject_WrongServerPW = 4
	Reject_UsernameInUse = 5
	Reject_ServerFull = 6
	Reject_NoCertificate = 7
)
var Reject_RejectType_name = map[int32] string {
	0: "None",
	1: "WrongVersion",
	2: "InvalidUsername",
	3: "WrongUserPW",
	4: "WrongServerPW",
	5: "UsernameInUse",
	6: "ServerFull",
	7: "NoCertificate",
}
var Reject_RejectType_value = map[string] int32 {
	"None": 0,
	"WrongVersion": 1,
	"InvalidUsername": 2,
	"WrongUserPW": 3,
	"WrongServerPW": 4,
	"UsernameInUse": 5,
	"ServerFull": 6,
	"NoCertificate": 7,
}
func NewReject_RejectType(x int32) *Reject_RejectType {
	e := Reject_RejectType(x)
	return &e
}

type PermissionDenied_DenyType int32
const (
	PermissionDenied_Text = 0
	PermissionDenied_Permission = 1
	PermissionDenied_SuperUser = 2
	PermissionDenied_ChannelName = 3
	PermissionDenied_TextTooLong = 4
	PermissionDenied_H9K = 5
	PermissionDenied_TemporaryChannel = 6
	PermissionDenied_MissingCertificate = 7
	PermissionDenied_UserName = 8
	PermissionDenied_ChannelFull = 9
)
var PermissionDenied_DenyType_name = map[int32] string {
	0: "Text",
	1: "Permission",
	2: "SuperUser",
	3: "ChannelName",
	4: "TextTooLong",
	5: "H9K",
	6: "TemporaryChannel",
	7: "MissingCertificate",
	8: "UserName",
	9: "ChannelFull",
}
var PermissionDenied_DenyType_value = map[string] int32 {
	"Text": 0,
	"Permission": 1,
	"SuperUser": 2,
	"ChannelName": 3,
	"TextTooLong": 4,
	"H9K": 5,
	"TemporaryChannel": 6,
	"MissingCertificate": 7,
	"UserName": 8,
	"ChannelFull": 9,
}
func NewPermissionDenied_DenyType(x int32) *PermissionDenied_DenyType {
	e := PermissionDenied_DenyType(x)
	return &e
}

type ContextActionAdd_Context int32
const (
	ContextActionAdd_Server = 1
	ContextActionAdd_Channel = 2
	ContextActionAdd_User = 4
)
var ContextActionAdd_Context_name = map[int32] string {
	1: "Server",
	2: "Channel",
	4: "User",
}
var ContextActionAdd_Context_value = map[string] int32 {
	"Server": 1,
	"Channel": 2,
	"User": 4,
}
func NewContextActionAdd_Context(x int32) *ContextActionAdd_Context {
	e := ContextActionAdd_Context(x)
	return &e
}

type Version struct {
	Version	*uint32	"PB(varint,1,opt,name=version)"
	Release	*string	"PB(bytes,2,opt,name=release)"
	Os	*string	"PB(bytes,3,opt,name=os)"
	OsVersion	*string	"PB(bytes,4,opt,name=os_version)"
	XXX_unrecognized	[]byte
}
func (this *Version) Reset() {
	*this = Version{}
}

type UDPTunnel struct {
	Packet	[]byte	"PB(bytes,1,req,name=packet)"
	XXX_unrecognized	[]byte
}
func (this *UDPTunnel) Reset() {
	*this = UDPTunnel{}
}

type Authenticate struct {
	Username	*string	"PB(bytes,1,opt,name=username)"
	Password	*string	"PB(bytes,2,opt,name=password)"
	Tokens	[]string	"PB(bytes,3,rep,name=tokens)"
	CeltVersions	[]int32	"PB(varint,4,rep,name=celt_versions)"
	XXX_unrecognized	[]byte
}
func (this *Authenticate) Reset() {
	*this = Authenticate{}
}

type Ping struct {
	Timestamp	*uint64	"PB(varint,1,opt,name=timestamp)"
	Good	*uint32	"PB(varint,2,opt,name=good)"
	Late	*uint32	"PB(varint,3,opt,name=late)"
	Lost	*uint32	"PB(varint,4,opt,name=lost)"
	Resync	*uint32	"PB(varint,5,opt,name=resync)"
	UdpPackets	*uint32	"PB(varint,6,opt,name=udp_packets)"
	TcpPackets	*uint32	"PB(varint,7,opt,name=tcp_packets)"
	UdpPingAvg	*float32	"PB(fixed32,8,opt,name=udp_ping_avg)"
	UdpPingVar	*float32	"PB(fixed32,9,opt,name=udp_ping_var)"
	TcpPingAvg	*float32	"PB(fixed32,10,opt,name=tcp_ping_avg)"
	TcpPingVar	*float32	"PB(fixed32,11,opt,name=tcp_ping_var)"
	XXX_unrecognized	[]byte
}
func (this *Ping) Reset() {
	*this = Ping{}
}

type Reject struct {
	Type	*Reject_RejectType	"PB(varint,1,opt,name=type,enum=mumbleproto.Reject_RejectType)"
	Reason	*string	"PB(bytes,2,opt,name=reason)"
	XXX_unrecognized	[]byte
}
func (this *Reject) Reset() {
	*this = Reject{}
}

type ServerConfig struct {
	MaxBandwidth	*uint32	"PB(varint,1,opt,name=max_bandwidth)"
	WelcomeText	*string	"PB(bytes,2,opt,name=welcome_text)"
	AllowHtml	*bool	"PB(varint,3,opt,name=allow_html)"
	MessageLength	*uint32	"PB(varint,4,opt,name=message_length)"
	ImageMessageLength	*uint32	"PB(varint,5,opt,name=image_message_length)"
	XXX_unrecognized	[]byte
}
func (this *ServerConfig) Reset() {
	*this = ServerConfig{}
}

type ServerSync struct {
	Session	*uint32	"PB(varint,1,opt,name=session)"
	MaxBandwidth	*uint32	"PB(varint,2,opt,name=max_bandwidth)"
	WelcomeText	*string	"PB(bytes,3,opt,name=welcome_text)"
	Permissions	*uint64	"PB(varint,4,opt,name=permissions)"
	XXX_unrecognized	[]byte
}
func (this *ServerSync) Reset() {
	*this = ServerSync{}
}

type ChannelRemove struct {
	ChannelId	*uint32	"PB(varint,1,req,name=channel_id)"
	XXX_unrecognized	[]byte
}
func (this *ChannelRemove) Reset() {
	*this = ChannelRemove{}
}

type ChannelState struct {
	ChannelId	*uint32	"PB(varint,1,opt,name=channel_id)"
	Parent	*uint32	"PB(varint,2,opt,name=parent)"
	Name	*string	"PB(bytes,3,opt,name=name)"
	Links	[]uint32	"PB(varint,4,rep,name=links)"
	Description	*string	"PB(bytes,5,opt,name=description)"
	LinksAdd	[]uint32	"PB(varint,6,rep,name=links_add)"
	LinksRemove	[]uint32	"PB(varint,7,rep,name=links_remove)"
	Temporary	*bool	"PB(varint,8,opt,name=temporary,def=0)"
	Position	*int32	"PB(varint,9,opt,name=position,def=0)"
	DescriptionHash	[]byte	"PB(bytes,10,opt,name=description_hash)"
	XXX_unrecognized	[]byte
}
func (this *ChannelState) Reset() {
	*this = ChannelState{}
}
const Default_ChannelState_Temporary bool = false
const Default_ChannelState_Position int32 = 0

type UserRemove struct {
	Session	*uint32	"PB(varint,1,req,name=session)"
	Actor	*uint32	"PB(varint,2,opt,name=actor)"
	Reason	*string	"PB(bytes,3,opt,name=reason)"
	Ban	*bool	"PB(varint,4,opt,name=ban)"
	XXX_unrecognized	[]byte
}
func (this *UserRemove) Reset() {
	*this = UserRemove{}
}

type UserState struct {
	Session	*uint32	"PB(varint,1,opt,name=session)"
	Actor	*uint32	"PB(varint,2,opt,name=actor)"
	Name	*string	"PB(bytes,3,opt,name=name)"
	UserId	*uint32	"PB(varint,4,opt,name=user_id)"
	ChannelId	*uint32	"PB(varint,5,opt,name=channel_id)"
	Mute	*bool	"PB(varint,6,opt,name=mute)"
	Deaf	*bool	"PB(varint,7,opt,name=deaf)"
	Suppress	*bool	"PB(varint,8,opt,name=suppress)"
	SelfMute	*bool	"PB(varint,9,opt,name=self_mute)"
	SelfDeaf	*bool	"PB(varint,10,opt,name=self_deaf)"
	Texture	[]byte	"PB(bytes,11,opt,name=texture)"
	PluginContext	[]byte	"PB(bytes,12,opt,name=plugin_context)"
	PluginIdentity	*string	"PB(bytes,13,opt,name=plugin_identity)"
	Comment	*string	"PB(bytes,14,opt,name=comment)"
	Hash	*string	"PB(bytes,15,opt,name=hash)"
	CommentHash	[]byte	"PB(bytes,16,opt,name=comment_hash)"
	TextureHash	[]byte	"PB(bytes,17,opt,name=texture_hash)"
	XXX_unrecognized	[]byte
}
func (this *UserState) Reset() {
	*this = UserState{}
}

type BanList struct {
	Bans	[]*BanList_BanEntry	"PB(bytes,1,rep,name=bans)"
	Query	*bool	"PB(varint,2,opt,name=query,def=0)"
	XXX_unrecognized	[]byte
}
func (this *BanList) Reset() {
	*this = BanList{}
}
const Default_BanList_Query bool = false

type BanList_BanEntry struct {
	Address	[]byte	"PB(bytes,1,req,name=address)"
	Mask	*uint32	"PB(varint,2,req,name=mask)"
	Name	*string	"PB(bytes,3,opt,name=name)"
	Hash	*string	"PB(bytes,4,opt,name=hash)"
	Reason	*string	"PB(bytes,5,opt,name=reason)"
	Start	*string	"PB(bytes,6,opt,name=start)"
	Duration	*uint32	"PB(varint,7,opt,name=duration)"
	XXX_unrecognized	[]byte
}
func (this *BanList_BanEntry) Reset() {
	*this = BanList_BanEntry{}
}

type TextMessage struct {
	Actor	*uint32	"PB(varint,1,opt,name=actor)"
	Session	[]uint32	"PB(varint,2,rep,name=session)"
	ChannelId	[]uint32	"PB(varint,3,rep,name=channel_id)"
	TreeId	[]uint32	"PB(varint,4,rep,name=tree_id)"
	Message	*string	"PB(bytes,5,req,name=message)"
	XXX_unrecognized	[]byte
}
func (this *TextMessage) Reset() {
	*this = TextMessage{}
}

type PermissionDenied struct {
	Permission	*uint32	"PB(varint,1,opt,name=permission)"
	ChannelId	*uint32	"PB(varint,2,opt,name=channel_id)"
	Session	*uint32	"PB(varint,3,opt,name=session)"
	Reason	*string	"PB(bytes,4,opt,name=reason)"
	Type	*PermissionDenied_DenyType	"PB(varint,5,opt,name=type,enum=mumbleproto.PermissionDenied_DenyType)"
	Name	*string	"PB(bytes,6,opt,name=name)"
	XXX_unrecognized	[]byte
}
func (this *PermissionDenied) Reset() {
	*this = PermissionDenied{}
}

type ACL struct {
	ChannelId	*uint32	"PB(varint,1,req,name=channel_id)"
	InheritAcls	*bool	"PB(varint,2,opt,name=inherit_acls,def=1)"
	Groups	[]*ACL_ChanGroup	"PB(bytes,3,rep,name=groups)"
	Acls	[]*ACL_ChanACL	"PB(bytes,4,rep,name=acls)"
	Query	*bool	"PB(varint,5,opt,name=query,def=0)"
	XXX_unrecognized	[]byte
}
func (this *ACL) Reset() {
	*this = ACL{}
}
const Default_ACL_InheritAcls bool = true
const Default_ACL_Query bool = false

type ACL_ChanGroup struct {
	Name	*string	"PB(bytes,1,req,name=name)"
	Inherited	*bool	"PB(varint,2,opt,name=inherited,def=1)"
	Inherit	*bool	"PB(varint,3,opt,name=inherit,def=1)"
	Inheritable	*bool	"PB(varint,4,opt,name=inheritable,def=1)"
	Add	[]uint32	"PB(varint,5,rep,name=add)"
	Remove	[]uint32	"PB(varint,6,rep,name=remove)"
	InheritedMembers	[]uint32	"PB(varint,7,rep,name=inherited_members)"
	XXX_unrecognized	[]byte
}
func (this *ACL_ChanGroup) Reset() {
	*this = ACL_ChanGroup{}
}
const Default_ACL_ChanGroup_Inherited bool = true
const Default_ACL_ChanGroup_Inherit bool = true
const Default_ACL_ChanGroup_Inheritable bool = true

type ACL_ChanACL struct {
	ApplyHere	*bool	"PB(varint,1,opt,name=apply_here,def=1)"
	ApplySubs	*bool	"PB(varint,2,opt,name=apply_subs,def=1)"
	Inherited	*bool	"PB(varint,3,opt,name=inherited,def=1)"
	UserId	*uint32	"PB(varint,4,opt,name=user_id)"
	Group	*string	"PB(bytes,5,opt,name=group)"
	Grant	*uint32	"PB(varint,6,opt,name=grant)"
	Deny	*uint32	"PB(varint,7,opt,name=deny)"
	XXX_unrecognized	[]byte
}
func (this *ACL_ChanACL) Reset() {
	*this = ACL_ChanACL{}
}
const Default_ACL_ChanACL_ApplyHere bool = true
const Default_ACL_ChanACL_ApplySubs bool = true
const Default_ACL_ChanACL_Inherited bool = true

type QueryUsers struct {
	Ids	[]uint32	"PB(varint,1,rep,name=ids)"
	Names	[]string	"PB(bytes,2,rep,name=names)"
	XXX_unrecognized	[]byte
}
func (this *QueryUsers) Reset() {
	*this = QueryUsers{}
}

type CryptSetup struct {
	Key	[]byte	"PB(bytes,1,opt,name=key)"
	ClientNonce	[]byte	"PB(bytes,2,opt,name=client_nonce)"
	ServerNonce	[]byte	"PB(bytes,3,opt,name=server_nonce)"
	XXX_unrecognized	[]byte
}
func (this *CryptSetup) Reset() {
	*this = CryptSetup{}
}

type ContextActionAdd struct {
	Action	*string	"PB(bytes,1,req,name=action)"
	Text	*string	"PB(bytes,2,req,name=text)"
	Context	*uint32	"PB(varint,3,opt,name=context)"
	XXX_unrecognized	[]byte
}
func (this *ContextActionAdd) Reset() {
	*this = ContextActionAdd{}
}

type ContextAction struct {
	Session	*uint32	"PB(varint,1,opt,name=session)"
	ChannelId	*uint32	"PB(varint,2,opt,name=channel_id)"
	Action	*string	"PB(bytes,3,req,name=action)"
	XXX_unrecognized	[]byte
}
func (this *ContextAction) Reset() {
	*this = ContextAction{}
}

type UserList struct {
	Users	[]*UserList_User	"PB(bytes,1,rep,name=users)"
	XXX_unrecognized	[]byte
}
func (this *UserList) Reset() {
	*this = UserList{}
}

type UserList_User struct {
	UserId	*uint32	"PB(varint,1,req,name=user_id)"
	Name	*string	"PB(bytes,2,opt,name=name)"
	XXX_unrecognized	[]byte
}
func (this *UserList_User) Reset() {
	*this = UserList_User{}
}

type VoiceTarget struct {
	Id	*uint32	"PB(varint,1,opt,name=id)"
	Targets	[]*VoiceTarget_Target	"PB(bytes,2,rep,name=targets)"
	XXX_unrecognized	[]byte
}
func (this *VoiceTarget) Reset() {
	*this = VoiceTarget{}
}

type VoiceTarget_Target struct {
	Session	[]uint32	"PB(varint,1,rep,name=session)"
	ChannelId	*uint32	"PB(varint,2,opt,name=channel_id)"
	Group	*string	"PB(bytes,3,opt,name=group)"
	Links	*bool	"PB(varint,4,opt,name=links,def=0)"
	Children	*bool	"PB(varint,5,opt,name=children,def=0)"
	XXX_unrecognized	[]byte
}
func (this *VoiceTarget_Target) Reset() {
	*this = VoiceTarget_Target{}
}
const Default_VoiceTarget_Target_Links bool = false
const Default_VoiceTarget_Target_Children bool = false

type PermissionQuery struct {
	ChannelId	*uint32	"PB(varint,1,opt,name=channel_id)"
	Permissions	*uint32	"PB(varint,2,opt,name=permissions)"
	Flush	*bool	"PB(varint,3,opt,name=flush,def=0)"
	XXX_unrecognized	[]byte
}
func (this *PermissionQuery) Reset() {
	*this = PermissionQuery{}
}
const Default_PermissionQuery_Flush bool = false

type CodecVersion struct {
	Alpha	*int32	"PB(varint,1,req,name=alpha)"
	Beta	*int32	"PB(varint,2,req,name=beta)"
	PreferAlpha	*bool	"PB(varint,3,req,name=prefer_alpha,def=1)"
	XXX_unrecognized	[]byte
}
func (this *CodecVersion) Reset() {
	*this = CodecVersion{}
}
const Default_CodecVersion_PreferAlpha bool = true

type UserStats struct {
	Session	*uint32	"PB(varint,1,opt,name=session)"
	StatsOnly	*bool	"PB(varint,2,opt,name=stats_only,def=0)"
	Certificates	[][]byte	"PB(bytes,3,rep,name=certificates)"
	FromClient	*UserStats_Stats	"PB(bytes,4,opt,name=from_client)"
	FromServer	*UserStats_Stats	"PB(bytes,5,opt,name=from_server)"
	UdpPackets	*uint32	"PB(varint,6,opt,name=udp_packets)"
	TcpPackets	*uint32	"PB(varint,7,opt,name=tcp_packets)"
	UdpPingAvg	*float32	"PB(fixed32,8,opt,name=udp_ping_avg)"
	UdpPingVar	*float32	"PB(fixed32,9,opt,name=udp_ping_var)"
	TcpPingAvg	*float32	"PB(fixed32,10,opt,name=tcp_ping_avg)"
	TcpPingVar	*float32	"PB(fixed32,11,opt,name=tcp_ping_var)"
	Version	*Version	"PB(bytes,12,opt,name=version)"
	CeltVersions	[]int32	"PB(varint,13,rep,name=celt_versions)"
	Address	[]byte	"PB(bytes,14,opt,name=address)"
	Bandwidth	*uint32	"PB(varint,15,opt,name=bandwidth)"
	Onlinesecs	*uint32	"PB(varint,16,opt,name=onlinesecs)"
	Idlesecs	*uint32	"PB(varint,17,opt,name=idlesecs)"
	StrongCertificate	*bool	"PB(varint,18,opt,name=strong_certificate,def=0)"
	XXX_unrecognized	[]byte
}
func (this *UserStats) Reset() {
	*this = UserStats{}
}
const Default_UserStats_StatsOnly bool = false
const Default_UserStats_StrongCertificate bool = false

type UserStats_Stats struct {
	Good	*uint32	"PB(varint,1,opt,name=good)"
	Late	*uint32	"PB(varint,2,opt,name=late)"
	Lost	*uint32	"PB(varint,3,opt,name=lost)"
	Resync	*uint32	"PB(varint,4,opt,name=resync)"
	XXX_unrecognized	[]byte
}
func (this *UserStats_Stats) Reset() {
	*this = UserStats_Stats{}
}

type RequestBlob struct {
	SessionTexture	[]uint32	"PB(varint,1,rep,name=session_texture)"
	SessionComment	[]uint32	"PB(varint,2,rep,name=session_comment)"
	ChannelDescription	[]uint32	"PB(varint,3,rep,name=channel_description)"
	XXX_unrecognized	[]byte
}
func (this *RequestBlob) Reset() {
	*this = RequestBlob{}
}

func init() {
	proto.RegisterEnum("mumbleproto.Reject_RejectType", Reject_RejectType_name, Reject_RejectType_value)
	proto.RegisterEnum("mumbleproto.PermissionDenied_DenyType", PermissionDenied_DenyType_name, PermissionDenied_DenyType_value)
	proto.RegisterEnum("mumbleproto.ContextActionAdd_Context", ContextActionAdd_Context_name, ContextActionAdd_Context_value)
}
